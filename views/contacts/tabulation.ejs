<% layout("layouts/boilerplate") -%>

<!-- prettier-ignore -->
<%- include("../partials/navbar.ejs") %>
<!-- prettier-ignore -->

<p class="mb-0 mt-3"><b>Toggle Columns</b></p>
<div class="form-check form-check-inline">
  <label class="form-check-label">
    <input name="column" type="checkbox" class="form-check-input" value="name" checked />
    Name
  </label>
</div>

<div class="form-check form-check-inline">
  <label class="form-check-label">
    <input name="column" type="checkbox" class="form-check-input" value="company" checked />
    Company
  </label>
</div>

<div class="form-check form-check-inline">
  <label class="form-check-label">
    <input name="column" type="checkbox" class="form-check-input" value="count" checked />
    No of HR's
  </label>
</div>

<div class="form-check form-check-inline">
  <label class="form-check-label">
    <input name="column" type="checkbox" class="form-check-input" value="status" checked />
    Status
  </label>
</div>

<div class="form-check form-check-inline">
  <label class="form-check-label">
    <input name="column" type="checkbox" class="form-check-input" value="mode" checked />
    Interview Mode
  </label>
</div>

<div class="form-check form-check-inline">
  <label class="form-check-label">
    <input name="column" type="checkbox" class="form-check-input" value="member" <% if(!(role === "Member")) { %>
    checked <% } %> /> 2<sup>nd</sup> Year Member
  </label>
</div>

<div class="form-check form-check-inline">
  <label class="form-check-label">
    <input name="column" type="checkbox" class="form-check-input" value="incharge" <% if(role === "Admin") { %> checked
    <% } %> /> ED Incharge
  </label>
</div>

<div class="form-check form-check-inline">
  <label class="form-check-label">
    <input name="column" type="checkbox" class="form-check-input" value="preference" checked />
    Dept. Preference
  </label>
</div>

<div class="form-check form-check-inline">
  <label class="form-check-label">
    <input name="column" type="checkbox" class="form-check-input" value="comments" checked />
    Requirements
  </label>
</div>

<div>
  <button id="download-xlsx" class="btn btn-primary mb-2">Download As Excel File</button>
  <button id="download-pdf" class="btn btn-secondary mb-2">Download As PDF</button>
</div>

<table id="table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Company</th>
      <th>No of HR's</th>
      <th>Status</th>
      <th>Interview Mode</th>
      <th>2nd Year Member</th>
      <th>ED Incharge</th>
      <th>Department Preference</th>
      <th>Requirements</th>
    </tr>
  </thead>
  <tbody>
    <% contacts.forEach((contact) => { %>
    <tr>
      <td><%= contact.name %></td>
      <td><%= contact.company %></td>
      <td><%= contact.count %></td>
      <td><%= contact.status %></td>
      <td><%= contact.mode %></td>
      <td><%= contact.user.name %></td>
      <td><%= contact.user.incharge %></td>
      <td><%= contact.deptPreference %></td>
      <td><%= contact.comments %></td>
    </tr>
    <% }); %>
  </tbody>
</table>

<script>
  let table = new Tabulator('#table', {
    layout: 'fitColumns',
    responsiveLayout: true,
    columns: [
      {
        title: 'Name',
        field: 'name',
      },
      {
        title: 'Company',
        field: 'company',
      },
      {
        title: "No of HR's",
        field: 'count',
      },
      {
        title: 'Status',
        field: 'status',
        editor: 'select',
        editorParams: {
          values: {
            'Not Called': 'Not Called',
            'Wrong Number': 'Wrong Number',
            'Called/Declined': 'Called/Declined',
            'Called/Not Reachable': 'Not Reachable',
            'Called/Postponed': 'Called/Postponed',
            'Called/Accepted': 'Called/Accepted',
            'Emailed/Awaiting Response': 'Emailed/Awaiting Response',
            'Emailed/Declined': 'Emailed/Declined',
            'Emailed/Confirmed': 'Emailed/Confirmed',
          },
        },
        headerFilter: true,
        headerFilterParams: {
          values: {
            '': 'Show All',
            'Not Called': 'Not Called',
            'Wrong Number': 'Wrong Number',
            'Called/Declined': 'Called/Declined',
            'Called/Not Reachable': 'Not Reachable',
            'Called/Postponed': 'Called/Postponed',
            'Called/Accepted': 'Called/Accepted',
            'Emailed/Awaiting Response': 'Emailed/Awaiting Response',
            'Emailed/Declined': 'Emailed/Declined',
            'Emailed/Confirmed': 'Emailed/Confirmed',
          },
        },
      },
      {
        title: 'Interview Mode',
        field: 'mode',
        editor: 'select',
        editorParams: {
          values: {
            Offline: 'Offline',
            Online: 'Online',
          },
        },
        headerFilter: true,
        headerFilterParams: {
          values: { '': 'Show All', Offline: 'Offline', Online: 'Online' },
        },
      },
      {
        title: '2nd Year Member',
        field: 'member',
      },
      {
        title: 'ED Incharge',
        field: 'incharge',
        editor: 'select',
        editorParams: {
          values: {
            Adhihariharan: 'Adhihariharan',
            Anuja: 'Anuja',
            Dhivya: 'Dhivya',
            Govind: 'Govind',
            Joann: 'Joann',
          },
        },
        headerFilter: true,
        headerFilterParams: {
          values: {
            '': 'Show All',
            Adhihariharan: 'Adhihariharan',
            Anuja: 'Anuja',
            Dhivya: 'Dhivya',
            Govind: 'Govind',
            Joann: 'Joann',
          },
        },
      },
      {
        title: 'Department Preference',
        field: 'preference',
      },
      {
        title: 'Requirements',
        field: 'comments',
      },
    ],
  });

  // Show / Hide Columns Dynamically
  const checkboxes = document.querySelectorAll("input[type='checkbox']");

  checkboxes.forEach((checkbox) => {
    if (!checkbox.checked) {
      table.hideColumn(checkbox.value);
      checkbox.classList.add('d-none');
      checkbox.parentElement.parentElement.classList.add('d-none');
    }
  });

  checkboxes.forEach((checkbox) => {
    checkbox.addEventListener('change', function () {
      table.toggleColumn(checkbox.value);
    });
  });

  // Trigger download of data.xlsx file
  document.getElementById('download-xlsx').addEventListener('click', function () {
    table.download('xlsx', 'data.xlsx', { sheetName: 'My Data' });
  });

  // Trigger download of data.pdf file
  document.getElementById('download-pdf').addEventListener('click', function () {
    table.download('pdf', 'data.pdf', {
      orientation: 'portrait', //set page orientation to portrait
      title: 'HR Contacts', //add title to report
    });
  });
</script>
